name: Spring Boot CI Pipeline

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

# 워크플로우 레벨에서 권한 설정
permissions:
  contents: read # 코드 체크아웃을 위해 필요
  pull-requests: write # SonarCloud PR Decoration (상태 업데이트, 댓글)을 위해 필요

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # SonarCloud PR 분석을 위해 전체 Git 히스토리 필요

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Clean build directory
        run: ./gradlew clean

      - name: Run Tests
        run: ./gradlew test --continue
        env:
          SPRING_PROFILES_ACTIVE: test
          APP_VERIFICATION_URL: ${{ secrets.APP_VERIFICATION_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Generate Test Coverage Report
        run: ./gradlew jacocoTestReport

      - name: Build Project (without tests)
        run: ./gradlew build -x test
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          APP_VERIFICATION_URL: ${{ secrets.APP_VERIFICATION_URL }}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/test-results/test/*.xml

      - name: Upload Test Coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: build/reports/jacoco/test/jacocoTestReport.xml

      - name: Analyze with SonarCloud # SonarCloud 공식 액션 사용
        uses: SonarSource/sonarcloud-github-action@v2.2 # 최신 버전을 확인하고 사용하세요.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub Actions에서 제공하는 기본 토큰
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # SonarCloud 인증 토큰
        # build.gradle에 sonar.projectKey, sonar.organization, sonar.host.url 등이
        # 이미 설정되어 있으므로 별도의 with: 파라미터는 필요 없음.